syntax = "proto3";

// The service definition.
service Imagex {
    rpc Ping (Empty) returns (SuccessReply) {};
    rpc InferReady (InferReadyRequest) returns (SuccessReply);
    rpc Exit (Empty) returns (Empty);
    // Ready rpc
    rpc DeepxReady (Empty) returns (SuccessReply);
    rpc UIReady (Empty) returns (SuccessReply);
    rpc LightxReady (Empty) returns (SuccessReply);
}

service Deepx {
    rpc Ping (Empty) returns (SuccessReply) {};
    rpc Infer (InferRequest) returns (SuccessReply);
    rpc Exit (Empty) returns (Empty);
    rpc Initialize (Empty) returns (SuccessReply);
}

service UI {
    rpc Ping (Empty) returns (SuccessReply) {};
    rpc UpdateImage (UpdateImageRequest) returns (SuccessReply);
    rpc Exit (Empty) returns (Empty);
    rpc Initialize (Empty) returns (SuccessReply);
}

service Lightx {
    rpc Ping (Empty) returns (SuccessReply) {};
    rpc Exit (Empty) returns (Empty);
    rpc Initialize (Empty) returns (SuccessReply);
}
  
message Empty {
}

message SuccessReply {
    bool ok = 1;
}

message InferReadyRequest {
    int32 image_index = 1;
    int32 mask_index = 2;
    int32 timestamp = 3;
    string camera_id = 4;
    string capture_config = 5;
    int32 capture_index = 6;
    int32 infer_timestamp = 7;
    string network = 8;
    bool ok = 9;
    string ng_stats = 10;
    string results = 11;
}

message InferRequest {
    int32 image_index = 1;
    int32 mask_index = 2;
    int32 timestamp = 3;
    string camera_id = 4;
    string capture_config = 5;
    int32 capture_index = 6;
}

message UpdateImageRequest {
    int32 image_index = 1;
    int32 mask_index = 2;
    int32 timestamp = 3;
    string camera_id = 4;
    string capture_config = 5;
    int32 capture_index = 6;
    int32 infer_timestamp = 7;
    string network = 8;
    bool ok = 9;
    string part_id = 10;
}